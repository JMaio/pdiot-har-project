group = 'org.openapitools'
project.version = '1.0.0'

buildscript {
    repositories {
        maven { url "https://repo1.maven.org/maven2" }
        jcenter()
        google()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:4.1.0'
        classpath 'com.github.dcendents:android-maven-gradle-plugin:1.5'
    }
}

allprojects {
    repositories {
        jcenter()
    }
}


apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"
    defaultConfig {
        minSdkVersion 24
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }


    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    // Rename the aar correctly
//    libraryVariants.all { variant ->
//        variant.outputs.each { output ->
//            def outputFile = output.outputFile
//            if (outputFile != null && outputFile.name.endsWith('.aar')) {
//                def fileName = "${project.name}-${variant.baseName}-${version}.aar"
//                output.outputFile = new File(outputFile.parent, fileName)
//            }
//        }
//    }

    testOptions {
        unitTests.returnDefaultValues = true
    }
}


ext {
    swagger_annotations_version = '1.6.2'
    gson_version = '2.8.6'
    httpmime_version = '4.5.13'
    httpcore_version = '4.4.13'
    httpclient_version = '4.3.5.1'
    volley_version = "1.1.0"
    junit_version = '4.13.1'
    robolectric_version = '4.4'
    concurrent_unit_version = '0.4.6'
}

dependencies {
    implementation "io.swagger:swagger-annotations:$swagger_annotations_version"
    api "com.google.code.gson:gson:$gson_version"
    api "org.apache.httpcomponents:httpcore:$httpcore_version"
    api "org.apache.httpcomponents:httpmime:$httpmime_version"
//    api "org.apache.httpcomponents:httpclient-android:$httpclient_version"
    api "com.android.volley:volley:${volley_version}"
    testImplementation "junit:junit:$junit_version"
    testImplementation "org.robolectric:robolectric:${robolectric_version}"
    testImplementation "net.jodah:concurrentunit:${concurrent_unit_version}"
}

//afterEvaluate {
////    android.libraryVariants.all { variant ->
////        def task = project.tasks.create "jar${variant.name.capitalize()}", Jar
////        task.description = "Create jar artifact for ${variant.name}"
////        task.dependsOn variant.javaCompileProvider
////        task.from variant.javaCompileProvider.destinationDir
////        task.destinationDirectory = project.file("${project.buildDir}/outputs/jar")
////        task.archiveFileName = "${project.name}-${variant.baseName}-${version}.jar"
////        artifacts.add('archives', task);
////    }
//}
//
//task sourcesJar(type: Jar) {
//    from android.sourceSets.main.java.srcDirs
//    archiveClassifier = 'sources'
//}
//
//artifacts {
//    archives sourcesJar
//}
